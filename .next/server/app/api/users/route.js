"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/users/route";
exports.ids = ["app/api/users/route"];
exports.modules = {

/***/ "mongodb":
/*!**************************!*\
  !*** external "mongodb" ***!
  \**************************/
/***/ ((module) => {

module.exports = require("mongodb");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fusers%2Froute&page=%2Fapi%2Fusers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fusers%2Froute.ts&appDir=%2FUsers%2Fwongun78%2FVault%2Fhocdanit%2Fnextjs-mongodb-api%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fwongun78%2FVault%2Fhocdanit%2Fnextjs-mongodb-api&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fusers%2Froute&page=%2Fapi%2Fusers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fusers%2Froute.ts&appDir=%2FUsers%2Fwongun78%2FVault%2Fhocdanit%2Fnextjs-mongodb-api%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fwongun78%2FVault%2Fhocdanit%2Fnextjs-mongodb-api&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _Users_wongun78_Vault_hocdanit_nextjs_mongodb_api_src_app_api_users_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/users/route.ts */ \"(rsc)/./src/app/api/users/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/users/route\",\n        pathname: \"/api/users\",\n        filename: \"route\",\n        bundlePath: \"app/api/users/route\"\n    },\n    resolvedPagePath: \"/Users/wongun78/Vault/hocdanit/nextjs-mongodb-api/src/app/api/users/route.ts\",\n    nextConfigOutput,\n    userland: _Users_wongun78_Vault_hocdanit_nextjs_mongodb_api_src_app_api_users_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/users/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ1c2VycyUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGdXNlcnMlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZ1c2VycyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRndvbmd1bjc4JTJGVmF1bHQlMkZob2NkYW5pdCUyRm5leHRqcy1tb25nb2RiLWFwaSUyRnNyYyUyRmFwcCZwYWdlRXh0ZW5zaW9ucz10c3gmcGFnZUV4dGVuc2lvbnM9dHMmcGFnZUV4dGVuc2lvbnM9anN4JnBhZ2VFeHRlbnNpb25zPWpzJnJvb3REaXI9JTJGVXNlcnMlMkZ3b25ndW43OCUyRlZhdWx0JTJGaG9jZGFuaXQlMkZuZXh0anMtbW9uZ29kYi1hcGkmaXNEZXY9dHJ1ZSZ0c2NvbmZpZ1BhdGg9dHNjb25maWcuanNvbiZiYXNlUGF0aD0mYXNzZXRQcmVmaXg9Jm5leHRDb25maWdPdXRwdXQ9JnByZWZlcnJlZFJlZ2lvbj0mbWlkZGxld2FyZUNvbmZpZz1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNjO0FBQzRCO0FBQ3pHO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixnSEFBbUI7QUFDM0M7QUFDQSxjQUFjLHlFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxZQUFZO0FBQ1osQ0FBQztBQUNEO0FBQ0E7QUFDQTtBQUNBLFFBQVEsaUVBQWlFO0FBQ3pFO0FBQ0E7QUFDQSxXQUFXLDRFQUFXO0FBQ3RCO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDdUg7O0FBRXZIIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbmV4dGpzLW1vbmdvZGItYXBpLz82MzBhIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFwcFJvdXRlUm91dGVNb2R1bGUgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUtbW9kdWxlcy9hcHAtcm91dGUvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9mdXR1cmUvcm91dGUta2luZFwiO1xuaW1wb3J0IHsgcGF0Y2hGZXRjaCBhcyBfcGF0Y2hGZXRjaCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2xpYi9wYXRjaC1mZXRjaFwiO1xuaW1wb3J0ICogYXMgdXNlcmxhbmQgZnJvbSBcIi9Vc2Vycy93b25ndW43OC9WYXVsdC9ob2NkYW5pdC9uZXh0anMtbW9uZ29kYi1hcGkvc3JjL2FwcC9hcGkvdXNlcnMvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL3VzZXJzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdXNlcnNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3VzZXJzL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL1VzZXJzL3dvbmd1bjc4L1ZhdWx0L2hvY2Rhbml0L25leHRqcy1tb25nb2RiLWFwaS9zcmMvYXBwL2FwaS91c2Vycy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvdXNlcnMvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fusers%2Froute&page=%2Fapi%2Fusers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fusers%2Froute.ts&appDir=%2FUsers%2Fwongun78%2FVault%2Fhocdanit%2Fnextjs-mongodb-api%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fwongun78%2FVault%2Fhocdanit%2Fnextjs-mongodb-api&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/users/route.ts":
/*!************************************!*\
  !*** ./src/app/api/users/route.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   OPTIONS: () => (/* binding */ OPTIONS),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_mongodb__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/mongodb */ \"(rsc)/./src/lib/mongodb.ts\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _lib_utils__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/utils */ \"(rsc)/./src/lib/utils.ts\");\n\n\n\n\n// Handle CORS preflight\nasync function OPTIONS() {\n    return (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.handleCorsOptions)();\n}\n// GET - Get all users\nasync function GET(request) {\n    try {\n        const client = await _lib_mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n        const db = client.db(\"hocdanit\");\n        const users = await db.collection(\"users\").find({}, {\n            projection: {\n                password: 0\n            }\n        }).sort({\n            createdAt: -1\n        }).toArray();\n        const response = {\n            success: true,\n            data: users,\n            message: \"Users retrieved successfully\"\n        };\n        return (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.corsResponse)(next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response));\n    } catch (error) {\n        console.error(\"Get users error:\", error);\n        const response = {\n            success: false,\n            data: null,\n            message: \"Failed to fetch users\"\n        };\n        return (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.corsResponse)(next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response, {\n            status: 500\n        }));\n    }\n}\n// POST - Create new user\nasync function POST(request) {\n    try {\n        const body = await request.json();\n        const { username, email, password, fullName, bio, role = \"user\" } = body;\n        // Validation\n        if (!username || !email || !password) {\n            const response = {\n                success: false,\n                data: null,\n                message: \"Username, email, and password are required\"\n            };\n            return (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.corsResponse)(next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response, {\n                status: 400\n            }));\n        }\n        if (password.length < 6) {\n            const response = {\n                success: false,\n                data: null,\n                message: \"Password must be at least 6 characters\"\n            };\n            return (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.corsResponse)(next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response, {\n                status: 400\n            }));\n        }\n        const client = await _lib_mongodb__WEBPACK_IMPORTED_MODULE_1__[\"default\"];\n        const db = client.db(\"hocdanit\");\n        // Check if user already exists\n        const existingUser = await db.collection(\"users\").findOne({\n            $or: [\n                {\n                    username\n                },\n                {\n                    email\n                }\n            ]\n        });\n        if (existingUser) {\n            const response = {\n                success: false,\n                data: null,\n                message: \"User with this username or email already exists\"\n            };\n            return (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.corsResponse)(next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response, {\n                status: 409\n            }));\n        }\n        // Hash password\n        const hashedPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_2___default().hash(password, 12);\n        // Create user\n        const newUser = {\n            username,\n            email,\n            password: hashedPassword,\n            fullName: fullName || \"\",\n            bio: bio || \"\",\n            role,\n            createdAt: new Date(),\n            updatedAt: new Date()\n        };\n        const result = await db.collection(\"users\").insertOne(newUser);\n        // Return user without password\n        const { password: _, ...userResponse } = newUser;\n        const response = {\n            success: true,\n            data: {\n                ...userResponse,\n                _id: result.insertedId\n            },\n            message: \"User created successfully\"\n        };\n        return (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.corsResponse)(next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response, {\n            status: 201\n        }));\n    } catch (error) {\n        console.error(\"Create user error:\", error);\n        const response = {\n            success: false,\n            data: null,\n            message: \"Failed to create user\"\n        };\n        return (0,_lib_utils__WEBPACK_IMPORTED_MODULE_3__.corsResponse)(next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json(response, {\n            status: 500\n        }));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/users/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/mongodb.ts":
/*!****************************!*\
  !*** ./src/lib/mongodb.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongodb */ \"mongodb\");\n/* harmony import */ var mongodb__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongodb__WEBPACK_IMPORTED_MODULE_0__);\n\nif (false) {}\nconst uri = \"mongodb+srv://wongun78:kVV1lYSZiZtVxwjr@cluster0.byoz5sf.mongodb.net/hocdanit?retryWrites=true&w=majority\";\nconst options = {};\nlet client;\nlet clientPromise;\nif (true) {\n    // In development mode, use a global variable so that the value\n    // is preserved across module reloads caused by HMR (Hot Module Replacement).\n    if (!global._mongoClientPromise) {\n        client = new mongodb__WEBPACK_IMPORTED_MODULE_0__.MongoClient(uri, options);\n        global._mongoClientPromise = client.connect();\n    }\n    clientPromise = global._mongoClientPromise;\n} else {}\n// Export a module-scoped MongoClient promise. By doing this in a\n// separate module, the client can be shared across functions.\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clientPromise);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvbGliL21vbmdvZGIudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXNDO0FBRXRDLElBQUksS0FBd0IsRUFBRSxFQUU3QjtBQUVELE1BQU1LLE1BQU1KLDJHQUF1QjtBQUNuQyxNQUFNSyxVQUFVLENBQUM7QUFFakIsSUFBSUM7QUFDSixJQUFJQztBQU1KLElBQUlQLElBQXNDLEVBQUU7SUFDMUMsK0RBQStEO0lBQy9ELDZFQUE2RTtJQUM3RSxJQUFJLENBQUNRLE9BQU9DLG1CQUFtQixFQUFFO1FBQy9CSCxTQUFTLElBQUlQLGdEQUFXQSxDQUFDSyxLQUFLQztRQUM5QkcsT0FBT0MsbUJBQW1CLEdBQUdILE9BQU9JLE9BQU87SUFDN0M7SUFDQUgsZ0JBQWdCQyxPQUFPQyxtQkFBbUI7QUFDNUMsT0FBTyxFQUlOO0FBRUQsaUVBQWlFO0FBQ2pFLDhEQUE4RDtBQUM5RCxpRUFBZUYsYUFBYUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL25leHRqcy1tb25nb2RiLWFwaS8uL3NyYy9saWIvbW9uZ29kYi50cz81M2MyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vbmdvQ2xpZW50IH0gZnJvbSBcIm1vbmdvZGJcIjtcblxuaWYgKCFwcm9jZXNzLmVudi5NT05HT0RCX1VSSSkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ0ludmFsaWQvTWlzc2luZyBlbnZpcm9ubWVudCB2YXJpYWJsZTogXCJNT05HT0RCX1VSSVwiJyk7XG59XG5cbmNvbnN0IHVyaSA9IHByb2Nlc3MuZW52Lk1PTkdPREJfVVJJO1xuY29uc3Qgb3B0aW9ucyA9IHt9O1xuXG5sZXQgY2xpZW50OiBNb25nb0NsaWVudDtcbmxldCBjbGllbnRQcm9taXNlOiBQcm9taXNlPE1vbmdvQ2xpZW50PjtcblxuZGVjbGFyZSBnbG9iYWwge1xuICB2YXIgX21vbmdvQ2xpZW50UHJvbWlzZTogUHJvbWlzZTxNb25nb0NsaWVudD4gfCB1bmRlZmluZWQ7XG59XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gXCJkZXZlbG9wbWVudFwiKSB7XG4gIC8vIEluIGRldmVsb3BtZW50IG1vZGUsIHVzZSBhIGdsb2JhbCB2YXJpYWJsZSBzbyB0aGF0IHRoZSB2YWx1ZVxuICAvLyBpcyBwcmVzZXJ2ZWQgYWNyb3NzIG1vZHVsZSByZWxvYWRzIGNhdXNlZCBieSBITVIgKEhvdCBNb2R1bGUgUmVwbGFjZW1lbnQpLlxuICBpZiAoIWdsb2JhbC5fbW9uZ29DbGllbnRQcm9taXNlKSB7XG4gICAgY2xpZW50ID0gbmV3IE1vbmdvQ2xpZW50KHVyaSwgb3B0aW9ucyk7XG4gICAgZ2xvYmFsLl9tb25nb0NsaWVudFByb21pc2UgPSBjbGllbnQuY29ubmVjdCgpO1xuICB9XG4gIGNsaWVudFByb21pc2UgPSBnbG9iYWwuX21vbmdvQ2xpZW50UHJvbWlzZTtcbn0gZWxzZSB7XG4gIC8vIEluIHByb2R1Y3Rpb24gbW9kZSwgaXQncyBiZXN0IHRvIG5vdCB1c2UgYSBnbG9iYWwgdmFyaWFibGUuXG4gIGNsaWVudCA9IG5ldyBNb25nb0NsaWVudCh1cmksIG9wdGlvbnMpO1xuICBjbGllbnRQcm9taXNlID0gY2xpZW50LmNvbm5lY3QoKTtcbn1cblxuLy8gRXhwb3J0IGEgbW9kdWxlLXNjb3BlZCBNb25nb0NsaWVudCBwcm9taXNlLiBCeSBkb2luZyB0aGlzIGluIGFcbi8vIHNlcGFyYXRlIG1vZHVsZSwgdGhlIGNsaWVudCBjYW4gYmUgc2hhcmVkIGFjcm9zcyBmdW5jdGlvbnMuXG5leHBvcnQgZGVmYXVsdCBjbGllbnRQcm9taXNlO1xuIl0sIm5hbWVzIjpbIk1vbmdvQ2xpZW50IiwicHJvY2VzcyIsImVudiIsIk1PTkdPREJfVVJJIiwiRXJyb3IiLCJ1cmkiLCJvcHRpb25zIiwiY2xpZW50IiwiY2xpZW50UHJvbWlzZSIsImdsb2JhbCIsIl9tb25nb0NsaWVudFByb21pc2UiLCJjb25uZWN0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/mongodb.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/utils.ts":
/*!**************************!*\
  !*** ./src/lib/utils.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AuthUtils: () => (/* binding */ AuthUtils),\n/* harmony export */   JWT_EXPIRE: () => (/* binding */ JWT_EXPIRE),\n/* harmony export */   JWT_SECRET: () => (/* binding */ JWT_SECRET),\n/* harmony export */   PortfolioUtils: () => (/* binding */ PortfolioUtils),\n/* harmony export */   Utils: () => (/* binding */ Utils),\n/* harmony export */   Validator: () => (/* binding */ Validator),\n/* harmony export */   corsResponse: () => (/* binding */ corsResponse),\n/* harmony export */   handleCorsOptions: () => (/* binding */ handleCorsOptions)\n/* harmony export */ });\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(bcryptjs__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n\n\n// JWT Secret key (should be in environment variables)\nconst JWT_SECRET = process.env.JWT_SECRET || \"your-secret-key-change-this-in-production\";\nconst JWT_EXPIRE = process.env.JWT_EXPIRE || \"7d\";\n// Authentication utilities\nclass AuthUtils {\n    // Hash password\n    static async hashPassword(password) {\n        const saltRounds = 12;\n        return await bcryptjs__WEBPACK_IMPORTED_MODULE_0___default().hash(password, saltRounds);\n    }\n    // Compare password\n    static async comparePassword(password, hashedPassword) {\n        return await bcryptjs__WEBPACK_IMPORTED_MODULE_0___default().compare(password, hashedPassword);\n    }\n    // Generate JWT token\n    static generateToken(userId) {\n        return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().sign({\n            userId: userId.toString()\n        }, JWT_SECRET, {\n            expiresIn: \"7d\"\n        });\n    }\n    // Verify JWT token\n    static verifyToken(token) {\n        try {\n            const decoded = jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, JWT_SECRET);\n            return decoded;\n        } catch (error) {\n            return null;\n        }\n    }\n    // Extract token from Authorization header\n    static extractTokenFromHeader(authHeader) {\n        if (!authHeader || !authHeader.startsWith(\"Bearer \")) {\n            return null;\n        }\n        return authHeader.substring(7);\n    }\n}\n// Validation utilities\nclass Validator {\n    // Email validation\n    static validateEmail(email) {\n        const errors = [];\n        if (!email) {\n            errors.push(\"Email is required\");\n        } else {\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n            if (!emailRegex.test(email)) {\n                errors.push(\"Invalid email format\");\n            }\n        }\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    }\n    // Password validation\n    static validatePassword(password) {\n        const errors = [];\n        if (!password) {\n            errors.push(\"Password is required\");\n        } else {\n            if (password.length < 6) {\n                errors.push(\"Password must be at least 6 characters long\");\n            }\n            if (password.length > 100) {\n                errors.push(\"Password must be less than 100 characters\");\n            }\n        }\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    }\n    // Username validation\n    static validateUsername(username) {\n        const errors = [];\n        if (!username) {\n            errors.push(\"Username is required\");\n        } else {\n            if (username.length < 3) {\n                errors.push(\"Username must be at least 3 characters long\");\n            }\n            if (username.length > 30) {\n                errors.push(\"Username must be less than 30 characters\");\n            }\n            if (!/^[a-zA-Z0-9_]+$/.test(username)) {\n                errors.push(\"Username can only contain letters, numbers, and underscores\");\n            }\n        }\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    }\n    // Coin validation\n    static validateCoin(coinData) {\n        const errors = [];\n        if (!coinData.symbol || coinData.symbol.trim().length === 0) {\n            errors.push(\"Coin symbol is required\");\n        } else if (coinData.symbol.length > 10) {\n            errors.push(\"Coin symbol must be less than 10 characters\");\n        }\n        if (!coinData.name || coinData.name.trim().length === 0) {\n            errors.push(\"Coin name is required\");\n        } else if (coinData.name.length > 100) {\n            errors.push(\"Coin name must be less than 100 characters\");\n        }\n        if (coinData.quantity === undefined || coinData.quantity === null) {\n            errors.push(\"Quantity is required\");\n        } else if (coinData.quantity <= 0) {\n            errors.push(\"Quantity must be greater than 0\");\n        }\n        if (coinData.averageBuyPrice === undefined || coinData.averageBuyPrice === null) {\n            errors.push(\"Average buy price is required\");\n        } else if (coinData.averageBuyPrice <= 0) {\n            errors.push(\"Average buy price must be greater than 0\");\n        }\n        if (coinData.currentPrice !== undefined && coinData.currentPrice < 0) {\n            errors.push(\"Current price cannot be negative\");\n        }\n        return {\n            isValid: errors.length === 0,\n            errors\n        };\n    }\n}\n// Portfolio calculation utilities\nclass PortfolioUtils {\n    // Calculate profit/loss for a single coin\n    static calculateCoinProfitLoss(coin) {\n        const currentPrice = coin.currentPrice || 0;\n        const currentValue = coin.quantity * currentPrice;\n        const profitLoss = currentValue - coin.totalInvested;\n        const profitLossPercentage = coin.totalInvested > 0 ? profitLoss / coin.totalInvested * 100 : 0;\n        return {\n            profitLoss: Number(profitLoss.toFixed(2)),\n            profitLossPercentage: Number(profitLossPercentage.toFixed(2)),\n            currentValue: Number(currentValue.toFixed(2))\n        };\n    }\n    // Calculate portfolio summary\n    static calculatePortfolioSummary(coins) {\n        let totalInvested = 0;\n        let currentValue = 0;\n        let topPerformer;\n        let worstPerformer;\n        let maxGain = -Infinity;\n        let maxLoss = Infinity;\n        coins.forEach((coin)=>{\n            const calc = this.calculateCoinProfitLoss(coin);\n            totalInvested += coin.totalInvested;\n            currentValue += calc.currentValue;\n            // Find top and worst performers\n            if (calc.profitLossPercentage > maxGain) {\n                maxGain = calc.profitLossPercentage;\n                topPerformer = {\n                    symbol: coin.symbol,\n                    name: coin.name,\n                    profitLossPercentage: calc.profitLossPercentage\n                };\n            }\n            if (calc.profitLossPercentage < maxLoss) {\n                maxLoss = calc.profitLossPercentage;\n                worstPerformer = {\n                    symbol: coin.symbol,\n                    name: coin.name,\n                    profitLossPercentage: calc.profitLossPercentage\n                };\n            }\n        });\n        const totalProfitLoss = currentValue - totalInvested;\n        const totalProfitLossPercentage = totalInvested > 0 ? totalProfitLoss / totalInvested * 100 : 0;\n        return {\n            userId: coins[0]?.userId || \"\",\n            totalInvested: Number(totalInvested.toFixed(2)),\n            currentValue: Number(currentValue.toFixed(2)),\n            totalProfitLoss: Number(totalProfitLoss.toFixed(2)),\n            totalProfitLossPercentage: Number(totalProfitLossPercentage.toFixed(2)),\n            coinCount: coins.length,\n            topPerformer,\n            worstPerformer,\n            lastUpdated: new Date()\n        };\n    }\n    // Update coin with new price\n    static updateCoinPrice(coin, newPrice) {\n        const calc = this.calculateCoinProfitLoss({\n            ...coin,\n            currentPrice: newPrice\n        });\n        return {\n            ...coin,\n            currentPrice: newPrice,\n            currentValue: calc.currentValue,\n            profitLoss: calc.profitLoss,\n            profitLossPercentage: calc.profitLossPercentage,\n            lastPriceUpdate: new Date(),\n            updatedAt: new Date()\n        };\n    }\n    // Calculate new average buy price when adding more coins\n    static calculateNewAveragePrice(currentQuantity, currentAvgPrice, newQuantity, newPrice) {\n        const totalValue = currentQuantity * currentAvgPrice + newQuantity * newPrice;\n        const totalQuantity = currentQuantity + newQuantity;\n        return Number((totalValue / totalQuantity).toFixed(8));\n    }\n}\n// General utilities\nclass Utils {\n    // Format currency\n    static formatCurrency(amount, currency = \"USD\") {\n        return new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: currency\n        }).format(amount);\n    }\n    // Format percentage\n    static formatPercentage(percentage) {\n        const sign = percentage >= 0 ? \"+\" : \"\";\n        return `${sign}${percentage.toFixed(2)}%`;\n    }\n    // Format large numbers\n    static formatNumber(num) {\n        if (num >= 1e9) {\n            return (num / 1e9).toFixed(2) + \"B\";\n        }\n        if (num >= 1e6) {\n            return (num / 1e6).toFixed(2) + \"M\";\n        }\n        if (num >= 1e3) {\n            return (num / 1e3).toFixed(2) + \"K\";\n        }\n        return num.toFixed(2);\n    }\n    // Generate random string\n    static generateRandomString(length) {\n        const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n        let result = \"\";\n        for(let i = 0; i < length; i++){\n            result += chars.charAt(Math.floor(Math.random() * chars.length));\n        }\n        return result;\n    }\n    // Clean string for database\n    static sanitizeString(str) {\n        return str.trim().replace(/\\s+/g, \" \");\n    }\n}\n// CORS helper function\nfunction corsResponse(response) {\n    response.headers.set(\"Access-Control-Allow-Origin\", \"*\");\n    response.headers.set(\"Access-Control-Allow-Methods\", \"GET, POST, PUT, DELETE, OPTIONS\");\n    response.headers.set(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\n    return response;\n}\n// Handle OPTIONS request for CORS preflight\nfunction handleCorsOptions() {\n    const response = new NextResponse(null, {\n        status: 200\n    });\n    response.headers.set(\"Access-Control-Allow-Origin\", \"*\");\n    response.headers.set(\"Access-Control-Allow-Methods\", \"GET, POST, PUT, DELETE, OPTIONS\");\n    response.headers.set(\"Access-Control-Allow-Headers\", \"Content-Type, Authorization\");\n    return response;\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/utils.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/semver","vendor-chunks/bcryptjs","vendor-chunks/jsonwebtoken","vendor-chunks/lodash.includes","vendor-chunks/jws","vendor-chunks/lodash.once","vendor-chunks/jwa","vendor-chunks/lodash.isinteger","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/lodash.isplainobject","vendor-chunks/ms","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isboolean","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fusers%2Froute&page=%2Fapi%2Fusers%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fusers%2Froute.ts&appDir=%2FUsers%2Fwongun78%2FVault%2Fhocdanit%2Fnextjs-mongodb-api%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fwongun78%2FVault%2Fhocdanit%2Fnextjs-mongodb-api&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();